version: '3'

services:
  traefik:
    image: "traefik:v2.10"
    container_name: "traefik"
    command:
#      - "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.matrix.address=:8008"
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
  synapse:
    image: docker.io/matrixdotorg/synapse:latest
    # Since synapse does not retry to connect to the database, restart upon
    # failure
    restart: unless-stopped
    # See the readme for a full documentation of the environment settings
    # NOTE: You must edit homeserver.yaml to use postgres, it defaults to sqlite
    environment:
      - SYNAPSE_CONFIG_PATH=/data/homeserver.yaml
    volumes:
      # store all the files in a local folder
      - ./synapse_files:/data
    # In order to expose Synapse, we use a traefik reverse proxy:
    labels:
      - traefik.enable=true
      - traefik.http.routers.http-synapse.entryPoints=web
      - traefik.http.routers.http-synapse.rule=Host(`my.matrix.host`)
#      - traefik.http.middlewares.https_redirect.redirectscheme.scheme=https
#      - traefik.http.middlewares.https_redirect.redirectscheme.permanent=true
#      - traefik.http.routers.http-synapse.middlewares=https_redirect
#      - traefik.http.routers.https-synapse.entryPoints=https
#      - traefik.http.routers.https-synapse.rule=Host(`my.matrix.host`)
#      - traefik.http.routers.https-synapse.service=synapse
#      - traefik.http.routers.https-synapse.tls=true
#      - traefik.http.services.synapse.loadbalancer.server.port=8008
#      - traefik.http.routers.https-synapse.tls.certResolver=le-ssl

  teams-bridge:
    image: neilsb/mx-puppet-teams
#    ports:
#      - "8432:8432"
    volumes:
      - ./bridge_files:/data
    labels:
      - traefik.enable=true
      - traefik.http.routers.http-synapse.entryPoints=web
      - traefik.http.routers.http-synapse.rule=Host(`my.bridge.host`)
